DROP PROCEDURE IF EXISTS rollbackGame;
CREATE PROCEDURE rollbackGame(in gameId INT, in userId INT)
sp: BEGIN
	
	DECLARE allowed INT DEFAULT 0;
    DECLARE currentRound INT DEFAULT NULL;
    DECLARE currentQuestion INT DEFAULT NULL;

    DECLARE nextRound INT DEFAULT NULL;
    DECLARE nextQuestion INT DEFAULT NULL;
    DECLARE roundComplete INT DEFAULT 0;

    DECLARE lastQuestionInRound INT;
    DECLARE lastRoundInGame INT;
    DECLARE firstQuestionInRound INT;
    DECLARE firstRoundInGame INT;
    DECLARE gameCompleted INT;
    DECLARE roundCompleted INT;
    

   	select 
		case when exists (select 1 from games where id = gameId and owner_user_id = userId) then 1 else 0 end into allowed
	from dual;

	if allowed = 0 then
		leave sp;
	end if;

    /* Is the game completed */
    select is_completed into gameCompleted
    from games
    where id = gameId;
    
    select r1.id into lastRoundInGame
    from rounds r1	
    where r1.game_id = gameId
    order by sort desc
    limit 1;

    if gameCompleted = true then
        /*  
            The game was completed 
            Set the game completed to false.
            Set the current_round_id to the last round.
        */
        update games
        set current_round_id = lastRoundInGame
        where id = gameId;

        leave sp;
    end if;

    /* The game was not completed. Start performing logic on the rounds */

    select current_question_id, current_round_id into currentQuestion, currentRound
    from games
    where games.id = gameId;

    if currentRound is null and currentQuestion is null then
        /* The game is already at the starting state. */
        leave sp;
    end if;

    if currentRound is null then
        /* 
            The game is all the way back at the starting point before a round has started. 
            There is nothing to do.
        */
        leave sp;
    end if;

     
    /* currentRound is not null */
    /* 
        The game is in progress.
        Determine if the Round is at the end screen, showing a question, or at the beginning round screen.
    */
    select is_completed into roundCompleted
    from rounds
    where id = currentRound;

    if roundCompleted = true then
        
        update rounds
        set is_completed = false
        where id = currentRound;

        update games
        set current_question_id = (
            select id
            from questions
            where round_id = currentRound
            order by sort desc
            limit 1
        )
        where id = gameId;

        leave sp;
    end if;

    /* 
        The round was not completed.
        It might have been on a question, or it might have been on the round start screen.
    */

    if currentQuestion is not null then
        /* The round was on a question.*/
        select id into firstQuestionInRound
        from questions
        where round_id = currentRound
        and sort = 1;

        if currentQuestion = firstQuestionInRound then
            /* 
                The round was on the first question.
                Set the current question to null.
            */
            update games
            set current_question_id = null
            where id = gameId;

            leave sp;
        end if;

        /* 
            The round is in the middle of questions.
            Set the question id to the previous, non-null questions id.
        */
        update games
        set current_question_id = (
            select id
            from questions
            where round_id = currentRound
            and sort = (
                select sort-1
                from questions
                where id = currentQuestion
            )
        )
        where id = gameId;

        leave sp;
    end if;

    /* 
        The round is not complete and the current question has not been set.
        Because the current question is null, it implies the game was at the first rounds start screen.
    */
    if currentRound = firstRoundInGame then 
        /*
            Set the status back to the games start screen.
        */
        update games
        set current_question_id = null, current_question_id = null
        where id = gameId;

        leave sp;
    end if;

    /* 
        The game is at a beginning round screen, and there is a previous round.
        Set the current round to the previous round.
    */
    update games
    set current_round_id = (
        select id
        from rounds
        where game_id = gameId
        and sort = (
            select sort - 1
            from rounds
            where id = currentRound
        )
    )
    where id = gameId;

END;