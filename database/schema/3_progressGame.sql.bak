CREATE PROCEDURE progressGame(in gameId INT, in userId INT)
sp: BEGIN
	
	DECLARE allowed INT DEFAULT 0;
    DECLARE currentRound INT DEFAULT NULL;
    DECLARE currentQuestion INT DEFAULT NULL;

    DECLARE nextRound INT DEFAULT NULL;
    DECLARE nextQuestion INT DEFAULT NULL;
    DECLARE roundComplete INT DEFAULT 0;

    DECLARE lastQuestionInRound INT;
    DECLARE lastRoundInGame INT;
    /*Assume the game is not completed*/
   
   
   	select 
		case when exists (select 1 from games where id = gameId and owner_user_id = userId) then 1 else 0 end into allowed
	from dual;

	if allowed = 0 then
		leave sp;
	end if;

    select current_question_id, current_round_id into currentQuestion, currentRound
    from games
    where games.id = gameId;

    if currentRound is null then
        /* The game has not started. Start the game. */
        update games
        set current_round_id = (
            select rounds.id
            from rounds
            where game_id = gameId
            order by rounds.sort asc
            limit 1
        );
        leave sp;
    end if;

    select is_completed into roundComplete
    from rounds
    where id = currentRound;
   
   	if roundComplete = 0 and currentQuestion is null then 
   		/* The Round is set, but the questions have not started. 
   		 * The game was previously showing the 'start round' screen.
   		 * Insert the first question as the current question. */
   		update games 
   		set current_question_id = (
   			select id 
   			from questions q
   			where round_id = current_round_id 
   			and sort = 1
   		)
   		where games.id = gameId;
   	
   		leave sp;
   	end if;

    if roundComplete = 0 and currentQuestion is not null then 
        /* Determine if all of the questions are completed */
        /* Either go to the next question, or set the current_question_id to null and set the round to completed */        

        select q1.id into lastQuestionInRound
        from questions q1
        where round_id = currentRound
        order by sort desc
        limit 1;

        if currentQuestion = lastQuestionInRound then 
            /* The round just did the last question*/
            update games
            set current_question_id = null
            where games.id = gameId;

            update rounds
            set is_completed = 1
            where rounds.id = currentRound;

            leave sp;
        end if;

        /* The current question is not the last in the round */
        update games
        set current_question_id = (
            select questions.id
            from questions
            where round_id = currentRound
            and sort = 
                (select sort + 1
                 from questions q1
                 where q1.id = currentQuestion
                 )
        )
        where games.id = gameId;

        leave sp;

    end if;
   
   
   	

    /* The current round is not null and the round is completed */
    select r1.id into lastRoundInGame
    from rounds r1	
    where r1.game_id = gameId
    order by sort desc
    limit 1;

    if currentRound != lastRoundInGame then
        /* Move the game to the next round*/
        update games
        set current_question_id = null,
            current_round_id = (
                select r1.id
                from rounds r1
                where game_id = gameId
                and sort = (select sort +1
                            from rounds r2
                            where r2.id = currentRound)
            )
        where id = gameId;

        leave sp;
    end if;


    /* 
        The last round is complete.
        Set the round and games as completed.
    */

    update rounds
    set is_completed = 1
    where id = currentRound;

    update games
    set is_completed = true, current_question_id = null
    where id = gameId;


END